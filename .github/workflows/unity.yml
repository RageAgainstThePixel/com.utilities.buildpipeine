name: unity-build-validation

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - '*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env:
  UNITY_PROJECT_PATH: ''

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-latest]
        unity-versions: [2020.3.48f1 (b805b124c6b7), 2021.3.41f1 (6c5a9e20c022), 2022.3.40f1 (cbdda657d2f0)]
        include:
          - os: ubuntu-latest
            build-targets: [StandaloneLinux64, Android, iOS]
            modules: [linux-server]
          - os: windows-latest
            build-targets: [StandaloneWindows64, Android, WSAPlayer]
            modules: [windows-server]
          - os: macos-13
            build-targets: [StandaloneOSX, Android, iOS]
            modules: [mac-server]
          - os: macos-latest
            build-targets: [StandaloneOSX, Android, iOS, VisionOS]
            modules: [mac-server]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          clean: true

        # Installs the Unity Editor based on your project version text file
        # sets -> env.UNITY_EDITOR_PATH
        # sets -> env.UNITY_PROJECT_PATH
        # https://github.com/RageAgainstThePixel/unity-setup
      - uses: RageAgainstThePixel/setup-unity@development
        with:
          unity_version: ${{ matrix.unity-versions }} # overrides the version in the version file
          build_targets: ${{ matrix.build-targets }}
          modules: ${{ matrix.modules }}

        # Activates the installation with the provided credentials
        # https://github.com/XRTK/activate-unity-license
      - uses: xrtk/activate-unity-license@v5
        with:
          license-type: 'Personal' # Chooses license type to use [ Personal, Professional ]
          username: ${{ secrets.UNITY_USERNAME }}
          password: ${{ secrets.UNITY_PASSWORD }}

      - name: Unity Build (${{ matrix.build-targets }})
        uses: RageAgainstThePixel/unity-build@main
        with:
          build-target: ${{ matrix.build-targets }}
          publish-artifacts: true
          additional-validation-args: -importTMProEssentialsAsset
          additional-build-args: -export
          output-directory: ${{ github.workspace }}/Artifacts/${{ matrix.build-targets }}
          test: false

      - name: Validate Text Mesh Pro Resources
        run: |
          # Validate Text Mesh Pro Resources
          $TMPRO_PATH = "$env:UNITY_PROJECT_PATH/Assets/TextMesh Pro"
          if (Test-Path $TMPRO_PATH) {
            Write-Host "Text Mesh Pro Resources found at $TMPRO_PATH"
          } else {
            Write-Host "Text Mesh Pro Resources not found at $TMPRO_PATH"
            # list the folders in the Assets directory
            Get-ChildItem -Path $env:UNITY_PROJECT_PATH/Assets -Directory | Select-Object Name | Format-Table -AutoSize
            exit 1
          }
        shell: pwsh
